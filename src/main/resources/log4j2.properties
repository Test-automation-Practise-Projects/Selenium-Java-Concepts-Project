# Configuration file for logging

# The filename for the log files
property.filename = logs

# Print logs in both console and the file
appenders = console, file 

# Settings for the console
appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n

# Settings for the file
appender.file.type = File
appender.file.name = LOGFILE
appender.file.fileName=${filename}/MyLogs.log
appender.file.layout.type = PatternLayout
appender.file.layout.pattern = [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n

#configure to append the same created log file ine ach run without overiding (So then it will edit the same file)
appender.file.append = true

# Logger configuration
loggers = root

#loggers=file -> When I have this, the logs are dupliacted in teh file. So changed it to loggers=root
#package name
logger.file.name=demo
#log only debug level and above ones. If we change it to trace, then it will log trace level and above as well
#Use logger.file.level = off when we don't require logs.
logger.file.level = debug
logger.file.appenderRefs = file
logger.file.appenderRef.file.ref = LOGFILE

# Root logger configuration
#log only debug level and above ones. If we change it to trace, then it will log trace level and above as well
#Use rootLogger.level = off when we don't require logs.
rootLogger.level = debug
rootLogger.appenderRefs = console, file
rootLogger.appenderRef.console.ref = STDOUT
rootLogger.appenderRef.file.ref = LOGFILE


